import React, { useEffect } from "react";
import Head from "next/head";
import VerticalLayout from "src/@core/layouts/VerticalLayout";
import { useDispatch } from "react-redux";
import { actionSetListTracks, actionClearListTrack, actionSetFilterListTrack } from "store/actions/listTrack";
import TopTracks from "src/views/topTracks/TopTracks";

const SuggestionContractPage = ({ trackDatas, trackAttr }) => {
  const dispatch = useDispatch();

  useEffect(() => {
    dispatch(
      actionSetFilterListTrack({
        totalShow: "10",
        page: "1",
        keyword: "",
        totalData: trackAttr?.total ?? "0",
        totalPage: trackAttr?.totalPages ?? "1",
        perPage: trackAttr?.perPage ?? "0",
      })
    );
    
    dispatch(actionSetListTracks(trackDatas));
    return () => {
      dispatch(actionClearListTrack());
    };
  }, []);

  return (
    <React.Fragment>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <VerticalLayout className="">
        <TopTracks />
      </VerticalLayout>
    </React.Fragment>
  );
};

export default SuggestionContractPage;

export async function getServerSideProps(context) {
  const { res } = context;

  const responseTrack = await fetch(
    `http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&limit=500&api_key=d9721bceacaa63110cb6f3a0b2eb5543&format=json`
  );
  const dataTracks = await responseTrack.json();
  const trackDatas = dataTracks.tracks.track;
  const trackAttr = dataTracks.tracks['@attr'];
  console.log(trackAttr)

  return {
    props: {
      trackDatas: trackDatas,
      trackAttr: trackAttr,
    },
  };
}
